[{"/home/hanif/projects/robot-market-gitlab/frontend/src/index.js":"1","/home/hanif/projects/robot-market-gitlab/frontend/src/App.js":"2","/home/hanif/projects/robot-market-gitlab/frontend/src/redux/store.js":"3","/home/hanif/projects/robot-market-gitlab/frontend/src/views/Home.jsx":"4","/home/hanif/projects/robot-market-gitlab/frontend/src/components/unit/Robot.jsx":"5","/home/hanif/projects/robot-market-gitlab/frontend/src/features/robots/RobotsReducer.js":"6","/home/hanif/projects/robot-market-gitlab/frontend/src/features/CartReducer.js":"7","/home/hanif/projects/robot-market-gitlab/frontend/src/components/groups/RobotGrid.jsx":"8","/home/hanif/projects/robot-market-gitlab/frontend/src/components/blocks/RobotsSection.jsx":"9","/home/hanif/projects/robot-market-gitlab/frontend/src/components/blocks/CartBlock.jsx":"10","/home/hanif/projects/robot-market-gitlab/frontend/src/components/groups/CartBox.jsx":"11","/home/hanif/projects/robot-market-gitlab/frontend/src/components/unit/Cartitem.jsx":"12","/home/hanif/projects/robot-market-gitlab/frontend/src/components/unit/Filter.jsx":"13","/home/hanif/projects/github/robotmarket/frontend/src/index.js":"14","/home/hanif/projects/github/robotmarket/frontend/src/App.js":"15","/home/hanif/projects/github/robotmarket/frontend/src/redux/store.js":"16","/home/hanif/projects/github/robotmarket/frontend/src/features/CartReducer.js":"17","/home/hanif/projects/github/robotmarket/frontend/src/features/robots/RobotsReducer.js":"18","/home/hanif/projects/github/robotmarket/frontend/src/views/Home.jsx":"19","/home/hanif/projects/github/robotmarket/frontend/src/components/blocks/RobotsSection.jsx":"20","/home/hanif/projects/github/robotmarket/frontend/src/components/blocks/CartBlock.jsx":"21","/home/hanif/projects/github/robotmarket/frontend/src/components/groups/CartBox.jsx":"22","/home/hanif/projects/github/robotmarket/frontend/src/components/groups/RobotGrid.jsx":"23","/home/hanif/projects/github/robotmarket/frontend/src/components/unit/Robot.jsx":"24","/home/hanif/projects/github/robotmarket/frontend/src/components/unit/Cartitem.jsx":"25","/home/hanif/projects/github/robotmarket/frontend/src/components/unit/Filter.jsx":"26","/home/hanif/projects/github/robotmarket/frontend/src/components/layouts/HeaderTop.jsx":"27"},{"size":352,"mtime":1616003707276,"results":"28","hashOfConfig":"29"},{"size":178,"mtime":1615449419268,"results":"30","hashOfConfig":"29"},{"size":256,"mtime":1615463404904,"results":"31","hashOfConfig":"29"},{"size":806,"mtime":1616003793484,"results":"32","hashOfConfig":"29"},{"size":2593,"mtime":1616041173565,"results":"33","hashOfConfig":"29"},{"size":523,"mtime":1615974889757,"results":"34","hashOfConfig":"29"},{"size":1358,"mtime":1615969676788,"results":"35","hashOfConfig":"29"},{"size":1029,"mtime":1616038566801,"results":"36","hashOfConfig":"29"},{"size":151,"mtime":1615780473876,"results":"37","hashOfConfig":"29"},{"size":1161,"mtime":1616040406316,"results":"38","hashOfConfig":"29"},{"size":515,"mtime":1616041120739,"results":"39","hashOfConfig":"29"},{"size":1280,"mtime":1616040911523,"results":"40","hashOfConfig":"29"},{"size":949,"mtime":1616039549948,"results":"41","hashOfConfig":"29"},{"size":352,"mtime":1616003707276,"results":"42","hashOfConfig":"43"},{"size":178,"mtime":1615449419268,"results":"44","hashOfConfig":"43"},{"size":256,"mtime":1615463404904,"results":"45","hashOfConfig":"43"},{"size":1358,"mtime":1615969676788,"results":"46","hashOfConfig":"43"},{"size":523,"mtime":1615974889757,"results":"47","hashOfConfig":"43"},{"size":891,"mtime":1616387693951,"results":"48","hashOfConfig":"43"},{"size":151,"mtime":1615780473876,"results":"49","hashOfConfig":"43"},{"size":1169,"mtime":1616390937376,"results":"50","hashOfConfig":"43"},{"size":833,"mtime":1616397940382,"results":"51","hashOfConfig":"43"},{"size":1029,"mtime":1616038566801,"results":"52","hashOfConfig":"43"},{"size":3240,"mtime":1616396646452,"results":"53","hashOfConfig":"43"},{"size":1280,"mtime":1616040911523,"results":"54","hashOfConfig":"43"},{"size":949,"mtime":1616039549948,"results":"55","hashOfConfig":"43"},{"size":2520,"mtime":1616398440990,"results":"56","hashOfConfig":"43"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"12fyuur",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"59"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"59"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"59"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"59"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"59"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},"rwpnvw",{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"91"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"91"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"91"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"91"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"91"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"91"},"/home/hanif/projects/robot-market-gitlab/frontend/src/index.js",[],["122","123"],"/home/hanif/projects/robot-market-gitlab/frontend/src/App.js",[],"/home/hanif/projects/robot-market-gitlab/frontend/src/redux/store.js",[],"/home/hanif/projects/robot-market-gitlab/frontend/src/views/Home.jsx",[],"/home/hanif/projects/robot-market-gitlab/frontend/src/components/unit/Robot.jsx",["124"],"import React from \"react\";\n\nimport { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport * as moment from \"moment\";\n\nimport { addToCart, removeFromCart } from \"../../features/CartReducer\";\nvar _ = require(\"lodash\");\n\nexport default function Robot(props) {\n  const dispatch = useDispatch();\n  const { id, robot } = props;\n  const all_robots = useSelector((state) => state.products.robots);\n  const subscribedRobots = useSelector((state) => state.cart.cartItems);\n\n  function subscribeCart(item) {\n    if (robot.stock !== 0) {\n      let cartItem = _.find(all_robots, { name: item });\n      // let setSub\n      // check to see if item is in cart already\n      if (_.find(subscribedRobots, { name: item })) {\n      } else {\n        // console.log(cartItem);\n        dispatch(addToCart(cartItem));\n      }\n    }\n  }\n  function unSubscribeCart(item) {\n    if (robot.stock !== 0) {\n      let cartItem = _.find(all_robots, { name: item });\n\n      dispatch(removeFromCart(cartItem));\n    }\n  }\n  useEffect(() => {\n    // addedStatus;\n  });\n  return (\n    <div className=\"col-md-6 col-lg-4 col-xxl-3 mb-3\" id={id}>\n      <div className={\"card \" + (robot.stock > 0 ? \"\" : \"out-stocked\")}>\n        <figure className=\"pt-3\">\n          <img src={robot.image} alt={\"image-\" + robot.name.toLowerCase()} />\n          <b className=\"material\">{robot.material}</b>\n        </figure>\n        <p className=\"py-2 mb-0 card-mid d-flex justify-content-between px-3\">\n          <b className=\"price\">\n            <b className=\"mx-2\">฿</b>\n            {robot.price}\n          </b>\n          <b className=\"stock\">\n            <b className=\"mx-2\">Stock:</b>\n            {robot.stock}\n          </b>\n        </p>\n        <div className=\"card-body\">\n          <div>\n            <p className=\"card-title\">{robot.name}</p>\n            <p className=\"date\">\n              {moment(robot.createdAt).format(\"DD-MM-YYYY\")}\n            </p>\n          </div>\n          <button\n            className={\n              \"btn \" +\n              (robot.stock > 0 ? \"btn-info\" : \"btn-warning\") +\n              (_.find(subscribedRobots, robot) ? \" btn-primary\" : \"\")\n            }\n            onClick={() =>\n              _.find(subscribedRobots, robot)\n                ? unSubscribeCart(robot.name)\n                : subscribeCart(robot.name)\n            }\n          >\n            {robot.stock > 0\n              ? _.find(subscribedRobots, robot)\n                ? \"Remove\"\n                : \"Add\"\n              : \"Out of Stock\"}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/home/hanif/projects/robot-market-gitlab/frontend/src/features/robots/RobotsReducer.js",[],"/home/hanif/projects/robot-market-gitlab/frontend/src/features/CartReducer.js",[],"/home/hanif/projects/robot-market-gitlab/frontend/src/components/groups/RobotGrid.jsx",["125"],"import React from \"react\";\nimport Robot from \"../unit/Robot\";\nimport { useSelector } from \"react-redux\";\nimport Filter from \"../unit/Filter\";\nimport { filter } from \"lodash\";\n\nexport default function RobotGrid() {\n  // function addToCart(robot) {\n  //   console.log(\"add cart event\");\n  // }\n  const all_robots = useSelector((state) => state.products.robots);\n  const filterOption = useSelector((state) => state.products.filterby);\n  const filteredRoots =\n    filterOption === \"\"\n      ? all_robots\n      : all_robots.filter(function (item) {\n          return item.material === filterOption;\n        });\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-12\">\n        <div className=\"filter-header\">\n          <b>Items for you</b>\n          <Filter></Filter>\n        </div>\n      </div>\n\n      {!all_robots\n        ? \"Loading...\"\n        : filteredRoots.map((item) => <Robot robot={item} key={item.name} />)}\n      {/* {all_robots.map((item) => (\n        <Robot robot={item}></Robot>\n      ))} */}\n    </div>\n  );\n}\n","/home/hanif/projects/robot-market-gitlab/frontend/src/components/blocks/RobotsSection.jsx",[],"/home/hanif/projects/robot-market-gitlab/frontend/src/components/blocks/CartBlock.jsx",["126"],"import React from \"react\";\nimport CartBox from \"../groups/CartBox\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function CartBlock() {\n  const subscribedRobots = useSelector((state) => state.cart.cartItems);\n  const totalRobots =\n    subscribedRobots.length > 0\n      ? subscribedRobots.reduce((sum, item) => {\n          return parseInt(sum) + parseInt(item.count);\n        }, 0)\n      : 0;\n\n  const totalPrice =\n    subscribedRobots.length > 0\n      ? subscribedRobots.reduce((sum, item) => {\n          return (\n            parseFloat(sum) + parseFloat(item.count) * parseFloat(item.price)\n          );\n        }, 0)\n      : 0;\n\n  return (\n    <div className=\"page-right\">\n      <div className=\"cart-header\">\n        <p className=\"cart-header-title\">Shopping Bag</p>\n        {totalRobots > 0 ? <p>({totalRobots} items)</p> : \"\"}\n      </div>\n      <CartBox></CartBox>\n      {totalRobots > 0 ? (\n        <p className=\"final\">\n          <b className=\"mr-3\">Sub total:</b>{\" \"}\n          <span>\n            <b>฿</b>\n            {totalPrice.toFixed(2)}\n          </span>\n        </p>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n","/home/hanif/projects/robot-market-gitlab/frontend/src/components/groups/CartBox.jsx",["127"],"import React from \"react\";\nimport CartItem from \"../unit/Cartitem\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function CartBox() {\n  const cartItems = useSelector((state) => state.cart.cartItems);\n  if (cartItems.length > 0) {\n    return cartItems.map((item) => (\n      <CartItem item={item} key={item.name}></CartItem>\n    ));\n  } else {\n    return (\n      <p className=\"text-center\" style={{ fontSize: \"1.2rem\", color: \"grey\" }}>\n        No items in the cart\n      </p>\n    );\n  }\n}\n","/home/hanif/projects/robot-market-gitlab/frontend/src/components/unit/Cartitem.jsx",["128","129"],"import React, { useState } from \"react\";\n// import { robotSlice } from \"../../features/robots/RobotsReducer\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  removeFromCart,\n  incrementCartItem,\n  decrementCartItem,\n} from \"../../features/CartReducer\";\n\nexport default function CartItem(props) {\n  const { item } = props;\n  const dispatch = useDispatch();\n\n  function addCount(item) {\n    if (item.stock > item.count && item.count < 5) {\n      dispatch(incrementCartItem(item));\n    } else {\n      alert(\"Max items reached\");\n    }\n  }\n\n  function removeCount(item) {\n    if (item.count !== 1) {\n      dispatch(decrementCartItem(item));\n    } else {\n      dispatch(removeFromCart(item));\n    }\n  }\n  return (\n    <div className=\"cart-item d-flex\">\n      <div className=\"cart-left\">\n        <img src={item.image} alt={\"image-\" + item.name} />\n      </div>\n      <div className=\"cart-right\">\n        <p className=\"cart-name\">{item.name}</p>\n        <div className=\"cart-control\">\n          <button onClick={() => addCount(item)}>+</button>\n          <span className=\"cart-times\">{item.count} x</span>\n          <button onClick={() => removeCount(item)}>-</button>\n        </div>\n      </div>\n      <p className=\"cart-price\">฿ {item.price}</p>\n    </div>\n  );\n}\n","/home/hanif/projects/robot-market-gitlab/frontend/src/components/unit/Filter.jsx",[],"/home/hanif/projects/github/robotmarket/frontend/src/index.js",[],["130","131"],"/home/hanif/projects/github/robotmarket/frontend/src/App.js",[],"/home/hanif/projects/github/robotmarket/frontend/src/redux/store.js",[],"/home/hanif/projects/github/robotmarket/frontend/src/features/CartReducer.js",[],"/home/hanif/projects/github/robotmarket/frontend/src/features/robots/RobotsReducer.js",[],"/home/hanif/projects/github/robotmarket/frontend/src/views/Home.jsx",[],"/home/hanif/projects/github/robotmarket/frontend/src/components/blocks/RobotsSection.jsx",[],"/home/hanif/projects/github/robotmarket/frontend/src/components/blocks/CartBlock.jsx",["132"],"import React from \"react\";\nimport CartBox from \"../groups/CartBox\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function CartBlock() {\n  const subscribedRobots = useSelector((state) => state.cart.cartItems);\n  const totalRobots =\n    subscribedRobots.length > 0\n      ? subscribedRobots.reduce((sum, item) => {\n          return parseInt(sum) + parseInt(item.count);\n        }, 0)\n      : 0;\n\n  const totalPrice =\n    subscribedRobots.length > 0\n      ? subscribedRobots.reduce((sum, item) => {\n          return (\n            parseFloat(sum) + parseFloat(item.count) * parseFloat(item.price)\n          );\n        }, 0)\n      : 0;\n\n  return (\n    <div className=\"page-right\">\n      <div className=\"cart-header\">\n        <p className=\"cart-header-title\">Shopping Bag</p>\n        {totalRobots > 0 ? <p>( {totalRobots} &nbsp;items )</p> : \"\"}\n      </div>\n      <CartBox></CartBox>\n      {totalRobots > 0 ? (\n        <p className=\"final\">\n          <b className=\"mr-3\">Sub total:</b>{\" \"}\n          <span>\n            <b>฿</b>\n            {totalPrice.toFixed(2)}\n          </span>\n        </p>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n","/home/hanif/projects/github/robotmarket/frontend/src/components/groups/CartBox.jsx",["133","134"],"import React from \"react\";\nimport CartItem from \"../unit/Cartitem\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport EmptyCarticon from \"../../assets/img/empty_cart.svg\";\n\nexport default function CartBox() {\n  const empty_cart = require(\"../../assets/img/empty_cart.svg\");\n  const cartItems = useSelector((state) => state.cart.cartItems);\n  if (cartItems.length > 0) {\n    return cartItems.map((item) => (\n      <CartItem item={item} key={item.name}></CartItem>\n    ));\n  } else {\n    return (\n      <div\n        className=\"text-center\"\n        style={{ fontSize: \"1.2rem\", color: \"grey\", marginTop: 50 }}\n      >\n        <img\n          src={empty_cart.default}\n          alt=\"empty-cart-icon\"\n          className=\"mx-auto\"\n          width=\"140\"\n        />\n        <p>No items in the cart</p>\n      </div>\n    );\n  }\n}\n","/home/hanif/projects/github/robotmarket/frontend/src/components/groups/RobotGrid.jsx",["135"],"/home/hanif/projects/github/robotmarket/frontend/src/components/unit/Robot.jsx",["136"],"import React from \"react\";\n\nimport { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport * as moment from \"moment\";\n\nimport { addToCart, removeFromCart } from \"../../features/CartReducer\";\nvar _ = require(\"lodash\");\n\nexport default function Robot(props) {\n  const dispatch = useDispatch();\n  const { id, robot } = props;\n  const all_robots = useSelector((state) => state.products.robots);\n  const subscribedRobots = useSelector((state) => state.cart.cartItems);\n  const checkIcon = require(\"../../assets/img/check.svg\");\n\n  function subscribeCart(item) {\n    if (robot.stock !== 0) {\n      let cartItem = _.find(all_robots, { name: item });\n      // let setSub\n      // check to see if item is in cart already\n      if (_.find(subscribedRobots, { name: item })) {\n      } else {\n        // console.log(cartItem);\n        dispatch(addToCart(cartItem));\n      }\n    }\n  }\n  function unSubscribeCart(item) {\n    if (robot.stock !== 0) {\n      let cartItem = _.find(all_robots, { name: item });\n\n      dispatch(removeFromCart(cartItem));\n    }\n  }\n  useEffect(() => {\n    // addedStatus;\n  });\n  return (\n    <div className=\"col-md-6 col-lg-4 col-xxl-3 mb-3\" id={id}>\n      <div\n        className={\n          \"card \" +\n          (robot.stock > 0 ? \"\" : \"out-stocked\") +\n          (_.find(subscribedRobots, robot) ? \"added-to-cart\" : \"\")\n        }\n      >\n        <figure className=\"pt-3\">\n          <img src={robot.image} alt={\"image-\" + robot.name.toLowerCase()} />\n          <b className=\"material\">{robot.material}</b>\n          {_.find(subscribedRobots, robot) ? (\n            <span className=\"addedStatus\">\n              <img\n                src={checkIcon.default}\n                height=\"30\"\n                width=\"30\"\n                alt=\"added-to-cart\"\n              />\n            </span>\n          ) : null}\n\n          {/* card actions */}\n          <div className=\"card-actions\">\n            <button\n              className={\n                \"btn \" +\n                (robot.stock > 0 ? \"available\" : \"not-available\") +\n                (_.find(subscribedRobots, robot) ? \" added\" : \"\")\n              }\n              onClick={() =>\n                _.find(subscribedRobots, robot)\n                  ? unSubscribeCart(robot.name)\n                  : subscribeCart(robot.name)\n              }\n            >\n              {robot.stock > 0\n                ? _.find(subscribedRobots, robot)\n                  ? \"Remove from cart\"\n                  : \"Add to cart\"\n                : \"Out of Stock\"}\n            </button>\n          </div>\n          {/* card actions */}\n        </figure>\n        <p className=\"py-2 mb-0 card-mid d-flex justify-content-between px-3\">\n          <b className=\"price\">\n            <b className=\"mx-2\">฿</b>\n            {robot.price}\n          </b>\n          <b className=\"stock\">\n            <b className=\"mx-2\">Stock:</b>\n            {robot.stock}\n          </b>\n        </p>\n        <div className=\"card-body\">\n          <div>\n            <p className=\"card-title\">{robot.name}</p>\n            <p className=\"date mb-0\">\n              {moment(robot.createdAt).format(\"DD-MM-YYYY\")}\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/home/hanif/projects/github/robotmarket/frontend/src/components/unit/Cartitem.jsx",["137","138"],"/home/hanif/projects/github/robotmarket/frontend/src/components/unit/Filter.jsx",[],"/home/hanif/projects/github/robotmarket/frontend/src/components/layouts/HeaderTop.jsx",["139","140","141"],"import { fill } from \"lodash\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function HeaderTop() {\n  const subscribedRobots = useSelector((state) => state.cart.cartItems);\n  function sidebarAction(e) {\n    e.preventDefault();\n    const status = document\n      .getElementById(\"root\")\n      .classList.contains(\"sidebar-open\");\n    console.log(status);\n    if (status) {\n      document.getElementById(\"root\").classList.remove(\"sidebar-open\");\n    } else {\n      document.getElementById(\"root\").classList.add(\"sidebar-open\");\n    }\n  }\n  return (\n    <div className=\"header\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <div className=\"d-flex justify-content-between align-items-center\">\n              <div className=\"header-brand\">\n                <h1>ERobo</h1>\n              </div>\n              <div className=\"header-notif\">\n                <a\n                  href=\"#\"\n                  className=\"header-notif-icon\"\n                  onClick={(e) => sidebarAction(e)}\n                >\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    height=\"24\"\n                    viewBox=\"0 0 24 24\"\n                    width=\"24\"\n                    style={{\n                      fill: subscribedRobots.length <= 0 ? \"none\" : \"black\",\n                    }}\n                  >\n                    <circle\n                      cx=\"8\"\n                      cy=\"21\"\n                      r=\"2\"\n                      stroke=\"#000\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"2\"\n                    />\n                    <circle\n                      cx=\"20\"\n                      cy=\"21\"\n                      r=\"2\"\n                      stroke=\"#000\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"2\"\n                    />\n                    <path\n                      d=\"M5.67,6H23l-1.68,8.39a2,2,0,0,1-2,1.61H8.75a2,2,0,0,1-2-1.74L5.23,2.74A2,2,0,0,0,3.25,1H1\"\n                      stroke=\"#000\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"2\"\n                    />\n                  </svg>\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n",{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":3,"column":21,"nodeType":"148","messageId":"149","endLine":3,"endColumn":29},{"ruleId":"146","severity":1,"message":"150","line":5,"column":10,"nodeType":"148","messageId":"149","endLine":5,"endColumn":16},{"ruleId":"146","severity":1,"message":"151","line":3,"column":23,"nodeType":"148","messageId":"149","endLine":3,"endColumn":34},{"ruleId":"146","severity":1,"message":"151","line":3,"column":23,"nodeType":"148","messageId":"149","endLine":3,"endColumn":34},{"ruleId":"146","severity":1,"message":"147","line":1,"column":17,"nodeType":"148","messageId":"149","endLine":1,"endColumn":25},{"ruleId":"146","severity":1,"message":"152","line":3,"column":10,"nodeType":"148","messageId":"149","endLine":3,"endColumn":21},{"ruleId":"142","replacedBy":"153"},{"ruleId":"144","replacedBy":"154"},{"ruleId":"146","severity":1,"message":"151","line":3,"column":23,"nodeType":"148","messageId":"149","endLine":3,"endColumn":34},{"ruleId":"146","severity":1,"message":"151","line":3,"column":23,"nodeType":"148","messageId":"149","endLine":3,"endColumn":34},{"ruleId":"146","severity":1,"message":"155","line":4,"column":8,"nodeType":"148","messageId":"149","endLine":4,"endColumn":21},{"ruleId":"146","severity":1,"message":"150","line":5,"column":10,"nodeType":"148","messageId":"149","endLine":5,"endColumn":16},{"ruleId":"146","severity":1,"message":"147","line":3,"column":21,"nodeType":"148","messageId":"149","endLine":3,"endColumn":29},{"ruleId":"146","severity":1,"message":"147","line":1,"column":17,"nodeType":"148","messageId":"149","endLine":1,"endColumn":25},{"ruleId":"146","severity":1,"message":"152","line":3,"column":10,"nodeType":"148","messageId":"149","endLine":3,"endColumn":21},{"ruleId":"146","severity":1,"message":"156","line":1,"column":10,"nodeType":"148","messageId":"149","endLine":1,"endColumn":14},{"ruleId":"146","severity":1,"message":"151","line":3,"column":23,"nodeType":"148","messageId":"149","endLine":3,"endColumn":34},{"ruleId":"157","severity":1,"message":"158","line":29,"column":17,"nodeType":"159","endLine":33,"endColumn":18},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'filter' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.",["160"],["161"],"'EmptyCarticon' is defined but never used.","'fill' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]