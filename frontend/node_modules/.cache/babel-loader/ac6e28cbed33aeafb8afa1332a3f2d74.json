{"ast":null,"code":"var _jsxFileName = \"/home/hanif/projects/robot-market-gitlab/frontend/src/components/groups/RobotGrid.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Robot from \"../unit/Robot\";\nimport { useSelector } from \"react-redux\";\nimport Filter from \"../unit/Filter\";\nimport { filter } from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RobotGrid() {\n  _s();\n\n  // function addToCart(robot) {\n  //   console.log(\"add cart event\");\n  // }\n  const all_robots = useSelector(state => state.products.robots);\n  const filterOption = useSelector(state => state.products.filterby);\n  const filteredRoots = filterOption === \"\" ? all_robots : all_robots.filter(function (item) {\n    return item.material === filterOption;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Filter:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Filter, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), !all_robots ? \"Loading...\" : filteredRoots.map(item => /*#__PURE__*/_jsxDEV(Robot, {\n      robot: item\n    }, item.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 39\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RobotGrid, \"ynqgVJqpf4Ed/GObiJe7kVw6DHg=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = RobotGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"RobotGrid\");","map":{"version":3,"sources":["/home/hanif/projects/robot-market-gitlab/frontend/src/components/groups/RobotGrid.jsx"],"names":["React","Robot","useSelector","Filter","filter","RobotGrid","all_robots","state","products","robots","filterOption","filterby","filteredRoots","item","material","map","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,SAASC,MAAT,QAAuB,QAAvB;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAClC;AACA;AACA;AACA,QAAMC,UAAU,GAAGJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeC,MAA3B,CAA9B;AACA,QAAMC,YAAY,GAAGR,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeG,QAA3B,CAAhC;AACA,QAAMC,aAAa,GACjBF,YAAY,KAAK,EAAjB,GACIJ,UADJ,GAEIA,UAAU,CAACF,MAAX,CAAkB,UAAUS,IAAV,EAAgB;AAChC,WAAOA,IAAI,CAACC,QAAL,KAAkBJ,YAAzB;AACD,GAFD,CAHN;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,EAQG,CAACJ,UAAD,GACG,YADH,GAEGM,aAAa,CAACG,GAAd,CAAmBF,IAAD,iBAAU,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEA;AAAd,OAAyBA,IAAI,CAACG,IAA9B;AAAA;AAAA;AAAA;AAAA,YAA5B,CAVN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GA9BuBX,S;UAIHH,W,EACEA,W;;;KALCG,S","sourcesContent":["import React from \"react\";\nimport Robot from \"../unit/Robot\";\nimport { useSelector } from \"react-redux\";\nimport Filter from \"../unit/Filter\";\nimport { filter } from \"lodash\";\n\nexport default function RobotGrid() {\n  // function addToCart(robot) {\n  //   console.log(\"add cart event\");\n  // }\n  const all_robots = useSelector((state) => state.products.robots);\n  const filterOption = useSelector((state) => state.products.filterby);\n  const filteredRoots =\n    filterOption === \"\"\n      ? all_robots\n      : all_robots.filter(function (item) {\n          return item.material === filterOption;\n        });\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-12\">\n        <div className=\"filter-header\">\n          <b>Filter:</b>\n          <Filter></Filter>\n        </div>\n      </div>\n\n      {!all_robots\n        ? \"Loading...\"\n        : filteredRoots.map((item) => <Robot robot={item} key={item.name} />)}\n      {/* {all_robots.map((item) => (\n        <Robot robot={item}></Robot>\n      ))} */}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}