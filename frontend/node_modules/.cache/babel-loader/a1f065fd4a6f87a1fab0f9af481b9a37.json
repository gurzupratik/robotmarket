{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\n\nvar _ = require(\"lodash\");\n\nexport const cartSlice = createSlice({\n  name: \"cart_box\",\n  initialState: {\n    cartItems: []\n  },\n  reducers: {\n    addToCart: (state, action) => {\n      state.cartItems = [...state.cartItems, action.payload];\n    },\n    removeFromCart: (state, action) => {\n      state.cartItems = _.filter(state.cartItems, function (item, action) {\n        return !action.payload;\n      });\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  addToCart,\n  removeFromCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"sources":["/home/hanif/projects/robot-market-gitlab/frontend/src/features/CartReducer.js"],"names":["createSlice","_","require","cartSlice","name","initialState","cartItems","reducers","addToCart","state","action","payload","removeFromCart","filter","item","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;;AAEA,IAAIC,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAf;;AACA,OAAO,MAAMC,SAAS,GAAGH,WAAW,CAAC;AACnCI,EAAAA,IAAI,EAAE,UAD6B;AAEnCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,SAAS,EAAE;AADC,GAFqB;AAKnCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC5BD,MAAAA,KAAK,CAACH,SAAN,GAAkB,CAAC,GAAGG,KAAK,CAACH,SAAV,EAAqBI,MAAM,CAACC,OAA5B,CAAlB;AACD,KAHO;AAIRC,IAAAA,cAAc,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAmB;AACjCD,MAAAA,KAAK,CAACH,SAAN,GAAkBL,CAAC,CAACY,MAAF,CAASJ,KAAK,CAACH,SAAf,EAA0B,UAAUQ,IAAV,EAAgBJ,MAAhB,EAAwB;AAClE,eAAO,CAACA,MAAM,CAACC,OAAf;AACD,OAFiB,CAAlB;AAGD;AARO;AALyB,CAAD,CAA7B,C,CAiBP;;AACA,OAAO,MAAM;AAAEH,EAAAA,SAAF;AAAaI,EAAAA;AAAb,IAAgCT,SAAS,CAACY,OAAhD;AAEP,eAAeZ,SAAS,CAACa,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nvar _ = require(\"lodash\");\nexport const cartSlice = createSlice({\n  name: \"cart_box\",\n  initialState: {\n    cartItems: [],\n  },\n  reducers: {\n    addToCart: (state, action) => {\n      state.cartItems = [...state.cartItems, action.payload];\n    },\n    removeFromCart: (state, action) => {\n      state.cartItems = _.filter(state.cartItems, function (item, action) {\n        return !action.payload;\n      });\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { addToCart, removeFromCart } = cartSlice.actions;\n\nexport default cartSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}