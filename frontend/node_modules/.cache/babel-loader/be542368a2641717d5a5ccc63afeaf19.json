{"ast":null,"code":"var _jsxFileName = \"/home/hanif/projects/github/robotmarket/frontend/src/components/unit/Robot.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport * as moment from \"moment\";\nimport { addToCart, removeFromCart } from \"../../features/CartReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _ = require(\"lodash\");\n\nexport default function Robot(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    id,\n    robot\n  } = props;\n  const all_robots = useSelector(state => state.products.robots);\n  const subscribedRobots = useSelector(state => state.cart.cartItems);\n\n  const checkIcon = require(\"../../assets/img/check.svg\");\n\n  function subscribeCart(item) {\n    if (robot.stock !== 0) {\n      let cartItem = _.find(all_robots, {\n        name: item\n      }); // let setSub\n      // check to see if item is in cart already\n\n\n      if (_.find(subscribedRobots, {\n        name: item\n      })) {} else {\n        // console.log(cartItem);\n        dispatch(addToCart(cartItem));\n      }\n    }\n  }\n\n  function unSubscribeCart(item) {\n    if (robot.stock !== 0) {\n      let cartItem = _.find(all_robots, {\n        name: item\n      });\n\n      dispatch(removeFromCart(cartItem));\n    }\n  }\n\n  useEffect(() => {// addedStatus;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-md-6 col-lg-4 col-xxl-3 mb-3\",\n    id: id,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card \" + (robot.stock > 0 ? \"\" : \"out-stocked\"),\n      children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n        className: \"pt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: robot.image,\n          alt: \"image-\" + robot.name.toLowerCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n          className: \"material\",\n          children: robot.material\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), _.find(subscribedRobots, robot) ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"addedStatus\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: checkIcon.default,\n            height: \"30\",\n            width: \"30\",\n            alt: \"added-to-cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"py-2 mb-0 card-mid d-flex justify-content-between px-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          className: \"price\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            className: \"mx-2\",\n            children: \"\\u0E3F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), robot.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n          className: \"stock\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            className: \"mx-2\",\n            children: \"Stock:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), robot.stock]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-title\",\n            children: robot.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"date\",\n            children: moment(robot.createdAt).format(\"DD-MM-YYYY\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn d-none \" + (robot.stock > 0 ? \"btn-info\" : \"btn-warning\") + (_.find(subscribedRobots, robot) ? \" btn-primary\" : \"\"),\n          onClick: () => _.find(subscribedRobots, robot) ? unSubscribeCart(robot.name) : subscribeCart(robot.name),\n          children: robot.stock > 0 ? _.find(subscribedRobots, robot) ? \"Remove\" : \"Add\" : \"Out of Stock\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Robot, \"P0Go2yypA54BEYkxu6kP8H5jJl0=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Robot;\n\nvar _c;\n\n$RefreshReg$(_c, \"Robot\");","map":{"version":3,"sources":["/home/hanif/projects/github/robotmarket/frontend/src/components/unit/Robot.jsx"],"names":["React","useEffect","useState","useSelector","useDispatch","moment","addToCart","removeFromCart","_","require","Robot","props","dispatch","id","robot","all_robots","state","products","robots","subscribedRobots","cart","cartItems","checkIcon","subscribeCart","item","stock","cartItem","find","name","unSubscribeCart","image","toLowerCase","material","default","price","createdAt","format"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport * as moment from \"moment\";\n\nimport { addToCart, removeFromCart } from \"../../features/CartReducer\";\nvar _ = require(\"lodash\");\n\nexport default function Robot(props) {\n  const dispatch = useDispatch();\n  const { id, robot } = props;\n  const all_robots = useSelector((state) => state.products.robots);\n  const subscribedRobots = useSelector((state) => state.cart.cartItems);\n  const checkIcon = require(\"../../assets/img/check.svg\");\n\n  function subscribeCart(item) {\n    if (robot.stock !== 0) {\n      let cartItem = _.find(all_robots, { name: item });\n      // let setSub\n      // check to see if item is in cart already\n      if (_.find(subscribedRobots, { name: item })) {\n      } else {\n        // console.log(cartItem);\n        dispatch(addToCart(cartItem));\n      }\n    }\n  }\n  function unSubscribeCart(item) {\n    if (robot.stock !== 0) {\n      let cartItem = _.find(all_robots, { name: item });\n\n      dispatch(removeFromCart(cartItem));\n    }\n  }\n  useEffect(() => {\n    // addedStatus;\n  });\n  return (\n    <div className=\"col-md-6 col-lg-4 col-xxl-3 mb-3\" id={id}>\n      <div className={\"card \" + (robot.stock > 0 ? \"\" : \"out-stocked\")}>\n        <figure className=\"pt-3\">\n          <img src={robot.image} alt={\"image-\" + robot.name.toLowerCase()} />\n          <b className=\"material\">{robot.material}</b>\n          {_.find(subscribedRobots, robot) ? (\n            <span className=\"addedStatus\">\n              <img\n                src={checkIcon.default}\n                height=\"30\"\n                width=\"30\"\n                alt=\"added-to-cart\"\n              />\n            </span>\n          ) : null}\n        </figure>\n        <p className=\"py-2 mb-0 card-mid d-flex justify-content-between px-3\">\n          <b className=\"price\">\n            <b className=\"mx-2\">฿</b>\n            {robot.price}\n          </b>\n          <b className=\"stock\">\n            <b className=\"mx-2\">Stock:</b>\n            {robot.stock}\n          </b>\n        </p>\n        <div className=\"card-body\">\n          <div>\n            <p className=\"card-title\">{robot.name}</p>\n            <p className=\"date\">\n              {moment(robot.createdAt).format(\"DD-MM-YYYY\")}\n            </p>\n          </div>\n          <button\n            className={\n              \"btn d-none \" +\n              (robot.stock > 0 ? \"btn-info\" : \"btn-warning\") +\n              (_.find(subscribedRobots, robot) ? \" btn-primary\" : \"\")\n            }\n            onClick={() =>\n              _.find(subscribedRobots, robot)\n                ? unSubscribeCart(robot.name)\n                : subscribeCart(robot.name)\n            }\n          >\n            {robot.stock > 0\n              ? _.find(subscribedRobots, robot)\n                ? \"Remove\"\n                : \"Add\"\n              : \"Out of Stock\"}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}