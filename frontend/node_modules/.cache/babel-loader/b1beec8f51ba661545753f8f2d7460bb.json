{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport allrobots from \"../features/robots/RobotsReducer\";\nimport cart_box from \"../features/CartReducer\";\nimport storage from \"redux-persist/lib/storage\";\nimport { combineReducers } from \"redux\";\nimport { persistReducer } from \"redux-persist\";\nimport thunk from \"redux-thunk\";\nconst reducers = combineReducers({\n  products: allrobots,\n  cart: cart_box\n});\nconst persistConfig = {\n  key: \"root\",\n  storage\n};\nconst persistedReducer = persistReducer(persistConfig, reducers);\nconst store = configureStore({\n  reducer: persistedReducer,\n  devTools: process.env.NODE_ENV !== \"production\",\n  middleware: [thunk]\n}); // export default configureStore({\n//   reducer: {\n//     products: allrobots,\n//     cart: cart_box,\n//   },\n// });","map":{"version":3,"sources":["/home/hanif/projects/github/robotmarket/frontend/src/redux/store.js"],"names":["configureStore","allrobots","cart_box","storage","combineReducers","persistReducer","thunk","reducers","products","cart","persistConfig","key","persistedReducer","store","reducer","devTools","process","env","NODE_ENV","middleware"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AAEA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,MAAMC,QAAQ,GAAGH,eAAe,CAAC;AAC/BI,EAAAA,QAAQ,EAAEP,SADqB;AAE/BQ,EAAAA,IAAI,EAAEP;AAFyB,CAAD,CAAhC;AAIA,MAAMQ,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBR,EAAAA;AAFoB,CAAtB;AAKA,MAAMS,gBAAgB,GAAGP,cAAc,CAACK,aAAD,EAAgBH,QAAhB,CAAvC;AAEA,MAAMM,KAAK,GAAGb,cAAc,CAAC;AAC3Bc,EAAAA,OAAO,EAAEF,gBADkB;AAE3BG,EAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAFR;AAG3BC,EAAAA,UAAU,EAAE,CAACb,KAAD;AAHe,CAAD,CAA5B,C,CAMA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport allrobots from \"../features/robots/RobotsReducer\";\nimport cart_box from \"../features/CartReducer\";\n\nimport storage from \"redux-persist/lib/storage\";\nimport { combineReducers } from \"redux\";\nimport { persistReducer } from \"redux-persist\";\nimport thunk from \"redux-thunk\";\n\nconst reducers = combineReducers({\n  products: allrobots,\n  cart: cart_box,\n});\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, reducers);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  devTools: process.env.NODE_ENV !== \"production\",\n  middleware: [thunk],\n});\n\n// export default configureStore({\n//   reducer: {\n//     products: allrobots,\n//     cart: cart_box,\n//   },\n// });\n"]},"metadata":{},"sourceType":"module"}